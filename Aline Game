"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cbRjXQw4mrbMenfNbHaDwZUiAADDtEgt
"""

import pygame
import random
import sys

# Initialize Pygame
pygame.init()

# Set up game screen dimensions
screen_width = 800
screen_height = 600
screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("Alien Invasion")

# Colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GREEN = (0, 255, 0)
RED = (255, 0, 0)

# Set up fonts
font = pygame.font.SysFont(None, 48)

# Game settings
ship_speed = 5
bullet_speed = 5
alien_speed = 1

# Game elements (Player, Bullets, Aliens)
class Ship(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.Surface((50, 50))
        self.image.fill(GREEN)
        self.rect = self.image.get_rect()
        self.rect.centerx = screen_width // 2
        self.rect.bottom = screen_height - 10
        self.x = float(self.rect.centerx)

    def update(self):
        self.x = float(self.rect.centerx)
        keys = pygame.key.get_pressed()
        if keys[pygame.K_LEFT] and self.rect.left > 0:
            self.x -= ship_speed
        if keys[pygame.K_RIGHT] and self.rect.right < screen_width:
            self.x += ship_speed
        self.rect.centerx = self.x

class Bullet(pygame.sprite.Sprite):
    def __init__(self, ship):
        super().__init__()
        self.image = pygame.Surface((5, 10))
        self.image.fill(RED)
        self.rect = self.image.get_rect()
        self.rect.centerx = ship.rect.centerx
        self.rect.top = ship.rect.top
        self.y = float(self.rect.top)

    def update(self):
        self.y -= bullet_speed
        self.rect.top = self.y
        if self.rect.bottom < 0:
            self.kill()

class Alien(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.Surface((50, 50))
        self.image.fill(RED)
        self.rect = self.image.get_rect()
        self.rect.x = random.randint(0, screen_width - 50)
        self.rect.y = random.randint(-100, -40)
        self.y = float(self.rect.y)

    def update(self):
        self.y += alien_speed
        self.rect.y = self.y
        if self.rect.top > screen_height:
            self.rect.x = random.randint(0, screen_width - 50)
            self.rect.y = random.randint(-100, -40)
            self.y = float(self.rect.y)

def check_collisions(aliens, bullets):
    collisions = pygame.sprite.groupcollide(bullets, aliens, True, True)
    return collisions

def update_score(score, collisions):
    return score + len(collisions)

def run_game():
    # Initialize game elements
    ship = Ship()
    bullets = pygame.sprite.Group()
    aliens = pygame.sprite.Group()

    # Create some initial aliens
    for _ in range(5):
        alien = Alien()
        aliens.add(alien)

    all_sprites = pygame.sprite.Group()
    all_sprites.add(ship)
    all_sprites.add(aliens)

    # Game loop
    score = 0
    clock = pygame.time.Clock()
    while True:
        screen.fill(BLACK)

        # Check for events
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE:
                    bullet = Bullet(ship)
                    bullets.add(bullet)
                    all_sprites.add(bullet)

        # Update game elements
        all_sprites.update()
        collisions = check_collisions(aliens, bullets)
        score = update_score(score, collisions)

        # Draw everything
        all_sprites.draw(screen)

        # Display the score
        score_text = font.render(f"Score: {score}", True, WHITE)
        screen.blit(score_text, (10, 10))

        # Refresh screen
        pygame.display.flip()

        # Set frames per second
        clock.tick(60)

# Run the game
if __name__ == '__main__':
    run_game()
